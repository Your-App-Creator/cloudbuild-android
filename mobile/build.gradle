// Module :mobile
plugins {
    id 'com.android.application'
    id 'com.google.firebase.appdistribution'
    id 'com.google.firebase.crashlytics'
    id 'androidx.navigation.safeargs'
    id 'io.syslogic.cloudkms'
}

android {
    namespace 'io.syslogic.cloudbuild'
    buildToolsVersion = '34.0.0'
    defaultConfig {
        applicationId 'io.syslogic.cloudbuild'
        minSdk 22
        compileSdk 34
        targetSdk 34
        versionCode 2
        versionName "1.0.1"
        setProperty("archivesBaseName", "cloudbuild_" + versionName)
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testBuildType "debug"
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        buildConfig true
        dataBinding true
    }

    if (rootProject.file('keystore.properties').exists()) {
        signingConfigs {
            debug {
                storeFile rootProject.file(".android${File.separator}debug.keystore")
                storePassword rootProject.ext.get('debugKeystorePass')
                keyAlias rootProject.ext.get('debugKeyAlias')
                keyPassword rootProject.ext.get('debugKeyPass')
            }
            release {
                storeFile rootProject.file(".android${File.separator}release.keystore")
                storePassword rootProject.ext.get('releaseKeystorePass')
                keyAlias rootProject.ext.get('releaseKeyAlias')
                keyPassword rootProject.ext.get('releaseKeyPass')
            }
        }

        buildTypes {

            debug {
                signingConfig signingConfigs.debug
            }

            release {
                signingConfig signingConfigs.release

                firebaseAppDistribution {
                    serviceCredentialsFile = rootProject.file("credentials/google-service-account.json")
                    releaseNotesFile = rootProject.file("credentials/release_notes.txt")
                    testersFile = rootProject.file("credentials/testers.txt")
                }

                firebaseCrashlytics {
                    nativeSymbolUploadEnabled false
                    unstrippedNativeLibsDir "build/intermediates/merged_native_libs/release/out/lib/"
                    strippedNativeLibsDir "build/intermediates/stripped_native_libs/release/out/lib/"
                }
            }
        }
    }

    lint {
        lintConfig project.file('lint.xml')
        checkAllWarnings true
        warningsAsErrors true
        abortOnError false
        showAll false
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"

    implementation "com.google.firebase:firebase-crashlytics:$crashlytics_version"
    // implementation "com.google.firebase:firebase-crashlytics-ndk:$crashlytics_version"

    implementation "com.google.firebase:firebase-perf:$perf_version"

    // jUnit
    testImplementation "junit:junit:$junit_version"

    // Required for connected tests.
    // https://mvnrepository.com/artifact/androidx.test/monitor
    debugImplementation "androidx.test:monitor:$test_monitor_version"

    // https://mvnrepository.com/artifact/androidx.test.ext
    androidTestImplementation "androidx.test.ext:junit:$test_junit_version"

    // https://mvnrepository.com/artifact/androidx.test
    // https://developer.android.com/jetpack/androidx/releases/test
    androidTestImplementation "androidx.test:core:$test_core_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test:rules:$test_rules_version"

    // https://mvnrepository.com/artifact/androidx.test.espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"

    // https://mvnrepository.com/artifact/androidx.test.uiautomator/uiautomator
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$uiautomator_version"
}

/** Google Play Services */
if (project.file('google-services.json').exists()) {
    apply plugin: "com.google.gms.google-services"
} else {
    logger.error('> File google-services.json is missing.')
}

/** Google Cloud KMS */
cloudKms {

    // The leading underscore is required due to the CloudBuild environment.
    kmsKeyPath = System.getenv('_CLOUD_KMS_KEY_PATH')

    plaintextFiles = [
            /* 0 */ System.getProperty("user.home") + File.separator + ".android" + File.separator + "debug.keystore",
            /* 1 */ System.getProperty("user.home") + File.separator + ".android" + File.separator + "release.keystore"
    ]

    ciphertextFiles = [
            /* 0 */ getRootDir().absolutePath + File.separator + 'credentials/debug.keystore.enc',
            /* 1 */ getRootDir().absolutePath + File.separator + 'credentials/release.keystore.enc'
    ]
}
